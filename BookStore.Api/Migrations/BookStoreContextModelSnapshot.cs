// <auto-generated />
using System;
using BookStore.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookStore.Api.Migrations
{
    [DbContext(typeof(BookStoreContext))]
    partial class BookStoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("BookStore.Domain.Model.Autor", b =>
                {
                    b.Property<int>("IdAutor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("IdAutor");

                    b.ToTable("Autor");
                });

            modelBuilder.Entity("BookStore.Domain.Model.Editora", b =>
                {
                    b.Property<int>("IdEditora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("IdEditora");

                    b.ToTable("Editora");
                });

            modelBuilder.Entity("BookStore.Domain.Model.Genero", b =>
                {
                    b.Property<int>("IdGenero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("IdGenero");

                    b.ToTable("Genero");
                });

            modelBuilder.Entity("BookStore.Domain.Model.Livro", b =>
                {
                    b.Property<int>("IdLivro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataPublicacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<int>("IdAutor")
                        .HasColumnType("int");

                    b.Property<int>("IdEditora")
                        .HasColumnType("int");

                    b.Property<int>("IdGenero")
                        .HasColumnType("int");

                    b.Property<string>("ImagemCapa")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Link")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<int>("Paginas")
                        .HasColumnType("int");

                    b.Property<string>("Sinopse")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("IdLivro");

                    b.HasIndex("IdAutor");

                    b.HasIndex("IdEditora");

                    b.HasIndex("IdGenero");

                    b.ToTable("Livro");
                });

            modelBuilder.Entity("BookStore.Domain.Model.Livro", b =>
                {
                    b.HasOne("BookStore.Domain.Model.Autor", "IdAutorNavigation")
                        .WithMany("Livro")
                        .HasForeignKey("IdAutor")
                        .IsRequired();

                    b.HasOne("BookStore.Domain.Model.Editora", "IdEditoraNavigation")
                        .WithMany("Livro")
                        .HasForeignKey("IdEditora")
                        .IsRequired();

                    b.HasOne("BookStore.Domain.Model.Genero", "IdGeneroNavigation")
                        .WithMany("Livro")
                        .HasForeignKey("IdGenero")
                        .IsRequired();

                    b.Navigation("IdAutorNavigation");

                    b.Navigation("IdEditoraNavigation");

                    b.Navigation("IdGeneroNavigation");
                });

            modelBuilder.Entity("BookStore.Domain.Model.Autor", b =>
                {
                    b.Navigation("Livro");
                });

            modelBuilder.Entity("BookStore.Domain.Model.Editora", b =>
                {
                    b.Navigation("Livro");
                });

            modelBuilder.Entity("BookStore.Domain.Model.Genero", b =>
                {
                    b.Navigation("Livro");
                });
#pragma warning restore 612, 618
        }
    }
}
